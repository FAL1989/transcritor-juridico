---
globs: backend/app/api/auth.py,backend/app/core/security.py,backend/app/schemas/auth.py
---
# Regras de Autenticação (JWT)

- OAuth2PasswordBearer com `tokenUrl: /api/v1/auth/login`; o formulário de login recebe `username` (email) e `password`.
- Registro: valide unicidade de e-mail; política de senha com maiúscula, minúscula, número e especial.
- Tokens:
  - `access_token` expira em minutos; `refresh_token` em dias (valores de `settings`).
  - Payload deve conter `{"sub": str(user.id), "type": "access"|"refresh", "exp": ...}`.
  - Refresh retorna novo `access_token` e mantém `refresh_token` (MVP atual).
- Endpoints e contratos estáveis:
  - `POST /auth/register` → `UserResponse`
  - `POST /auth/login` (form-urlencoded) → `Token { access_token, refresh_token, token_type: "bearer", expires_in }`
  - `POST /auth/refresh` → `Token`
  - `GET /auth/me` (Bearer) → `UserResponse`
- Segurança: `SECRET_KEY` do ambiente; algoritmo `HS256` em `settings`.
